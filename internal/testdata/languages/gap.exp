(source_file (if_statement (ERROR (function parameters: (parameters (identifier) (identifier)) locals: (locals (identifier) (identifier)) body: (assignment_statement left: (identifier) right: (binary_expression (integer) (identifier))) body: (assignment_statement left: (identifier) right: (function parameters: (parameters (identifier)) body: (return_statement (binary_expression (binary_expression (identifier) (binary_expression (identifier) (identifier))) (identifier))))) body: (return_statement (identifier))) (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)) (float) (function_call_option (record_entry left: (identifier) right: (integer))) (function_call_option (identifier)) (function_call_option (record_entry left: (integer) right: (integer))))) (sublist_selector variable: (lambda parameters: (lambda_parameters (identifier)) body: (binary_expression (identifier) (integer))) (ERROR) selector: (identifier) (ERROR (identifier))) (binary_expression (binary_expression (identifier) (identifier)) (integer)) (call function: (identifier) arguments: (argument_list (string (string_start) (string_content (escape_sequence)) (string_end)))) (char (escape_sequence)) (binary_expression (identifier) (range_expression first: (integer) last: (integer))) (binary_expression (identifier) (range_expression first: (integer) last: (call function: (identifier) arguments: (argument_list (identifier))))) (identifier) (call function: (identifier) arguments: (argument_list (identifier) (identifier))) (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)) (identifier) (string (string_start) (string_content) (string_end)) (identifier) (string (string_start) (string_content) (string_end)) (call function: (identifier) arguments: (argument_list (identifier))) (string (string_start) (string_content (escape_sequence)) (string_end))))) condition: (binary_expression (call function: (identifier) arguments: (argument_list (identifier))) (bool)) body: (break_statement)) (identifier) (identifier) (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)) (integer))) (call function: (identifier) arguments: (argument_list (string (string_start) (string_content) (string_end)) (integer))) (assignment_statement left: (identifier) right: (record_expression (record_entry left: (identifier) right: (list_expression (float) (float) (integer))) (record_entry left: (identifier) right: (bool)) (record_entry left: (identifier) right: (bool)))) (record_selector variable: (identifier) selector: (identifier)) (assignment_statement left: (identifier) right: (record_expression (record_entry left: (identifier) right: (identifier)) (record_entry left: (identifier) right: (record_selector variable: (tilde) selector: (identifier))) (record_entry left: (integer) right: (tilde)))) (record_selector variable: (record_selector variable: (record_selector variable: (identifier) selector: (integer)) selector: (identifier)) selector: (identifier)) (call function: (identifier) arguments: (argument_list (identifier) (binary_expression (identifier) (identifier)) (function parameters: (parameters (identifier)) body: (if_statement condition: (call function: (identifier) arguments: (argument_list (call function: (identifier) arguments: (argument_list (identifier))))) body: (return_statement (bool))) body: (call function: (identifier) arguments: (argument_list))))) (quit_statement) (quit_statement) (pragma) (help_statement (help_topic)) (help_statement (help_book) (help_topic)) (help_statement (help_book) (help_topic)) (help_statement) (help_statement (help_operator)) (help_statement (help_selector)))
