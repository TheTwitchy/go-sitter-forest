(source_file (if_statement (ERROR (function parameters: (parameters parameter: (identifier) parameter: (identifier)) locals: (locals (identifier) (identifier)) body: (assignment_statement left: (identifier) right: (binary_expression left: (integer) right: (identifier))) body: (assignment_statement left: (identifier) right: (function parameters: (parameters parameter: (identifier)) body: (return_statement (binary_expression left: (binary_expression left: (identifier) right: (binary_expression left: (identifier) right: (identifier))) right: (identifier))))) body: (return_statement (identifier))) (call function: (identifier) arguments: (argument_list argument: (string (string_start) (string_content) (string_end)) argument: (float) call_option: (function_call_option (record_entry left: (identifier) right: (integer))) call_option: (function_call_option (identifier)) call_option: (function_call_option (record_entry left: (integer) right: (integer))))) (sublist_selector variable: (lambda parameters: (lambda_parameters (identifier)) body: (binary_expression left: (identifier) right: (integer))) (ERROR) selector: (identifier) (ERROR (identifier))) (binary_expression left: (binary_expression left: (identifier) right: (identifier)) right: (integer)) (call function: (identifier) arguments: (argument_list argument: (string (string_start) (string_content (escape_sequence)) (string_end)))) (char (escape_sequence)) (binary_expression left: (identifier) right: (range_expression first: (integer) last: (integer))) (binary_expression left: (identifier) right: (range_expression first: (integer) last: (call function: (identifier) arguments: (argument_list argument: (identifier))))) (identifier) (call function: (identifier) arguments: (argument_list argument: (identifier) argument: (identifier))) (call function: (identifier) arguments: (argument_list argument: (string (string_start) (string_content) (string_end)) argument: (identifier) argument: (string (string_start) (string_content) (string_end)) argument: (identifier) argument: (string (string_start) (string_content) (string_end)) argument: (call function: (identifier) arguments: (argument_list argument: (identifier))) argument: (string (string_start) (string_content (escape_sequence)) (string_end))))) condition: (binary_expression left: (call function: (identifier) arguments: (argument_list argument: (identifier))) right: (bool)) body: (break_statement)) (identifier) (identifier) (call function: (identifier) arguments: (argument_list argument: (string (string_start) (string_content) (string_end)) argument: (integer))) (call function: (identifier) arguments: (argument_list argument: (string (string_start) (string_content) (string_end)) argument: (integer))) (assignment_statement left: (identifier) right: (record_expression (record_entry left: (identifier) right: (list_expression (float) (float) (integer))) (record_entry left: (identifier) right: (bool)) (record_entry left: (identifier) right: (bool)))) (record_selector variable: (identifier) selector: (identifier)) (assignment_statement left: (identifier) right: (record_expression (record_entry left: (identifier) right: (identifier)) (record_entry left: (identifier) right: (record_selector variable: (tilde) selector: (identifier))) (record_entry left: (integer) right: (tilde)))) (record_selector variable: (record_selector variable: (record_selector variable: (identifier) selector: (integer)) selector: (identifier)) selector: (identifier)) (call function: (identifier) arguments: (argument_list argument: (identifier) argument: (binary_expression left: (identifier) right: (identifier)) argument: (function parameters: (parameters parameter: (identifier)) body: (if_statement condition: (call function: (identifier) arguments: (argument_list argument: (call function: (identifier) arguments: (argument_list argument: (identifier))))) body: (return_statement (bool))) body: (call function: (identifier) arguments: (argument_list))))) (quit_statement) (quit_statement) (pragma) (help_statement (help_topic)) (help_statement (help_book) (help_topic)) (help_statement (help_book) (help_topic)) (help_statement) (help_statement (help_operator)) (help_statement (help_selector)))
