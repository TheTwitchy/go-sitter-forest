(source_file (codeunit_object id: (integer) name: (identifier) (ERROR (UNEXPECTED '"')) (subtype_property) (single_instance_property value: (boolean_literal)) (event_subscriber_instance_property) (var (variable_declaration name: (identifier))) (onrun_trigger (variable_declaration name: (identifier) (ERROR)) body: (code_block (assignment_statement variable: (identifier) value: (string_literal)) (procedure_call_statement procedure: (identifier) (identifier)) (procedure_call_statement procedure: (identifier) (identifier) (identifier)))) (procedure name: (identifier) (parameter name: (identifier)) (parameter name: (identifier)) (var (variable_declaration name: (identifier))) body: (code_block (procedure_call_statement procedure: (identifier) (ERROR)) (assignment_statement variable: (identifier) value: (number_literal)) (if_statement condition: (binary_expression left: (identifier) operator: (comparison_operator) right: (identifier)) then_body: (exit_statement (binary_expression left: (identifier) operator: (arithmetic_operator) right: (identifier))) else_body: (case_statement expression: (identifier) (case_branch value: (identifier) (ERROR) body: (assignment_statement variable: (identifier) value: (binary_expression left: (identifier) operator: (arithmetic_operator) right: (identifier)))) (case_branch value: (identifier) (ERROR) body: (assignment_statement variable: (identifier) value: (binary_expression left: (identifier) operator: (arithmetic_operator) right: (identifier)))))) (ERROR (binary_expression left: (binary_expression left: (binary_expression left: (identifier) operator: (comparison_operator) right: (identifier)) (ERROR (identifier)) operator: (comparison_operator) right: (identifier)) (ERROR) operator: (arithmetic_operator) (ERROR) right: (number_literal))) (repeat_statement body: (repeat_code_block (procedure_call_statement procedure: (identifier) (ERROR)) (procedure_call_statement procedure: (identifier) (ERROR))) condition: (binary_expression left: (identifier) operator: (comparison_operator) right: (identifier))) (exit_statement (identifier)))) (event_subscriber (event_subscriber_params object_type: (object_type) object_id: (identifier) event_name: (string_literal) element_name: (string_literal) skip_on_missing_license: (boolean_literal) skip_on_missing_permission: (boolean_literal)) (procedure name: (identifier) (parameter name: (identifier) type: (record_type table_reference: (identifier))) body: (code_block (comment)))) (onaftertestrun_trigger (Boolean) body: (code_block (if_statement condition: (identifier) then_body: (procedure_call_statement procedure: (identifier) (string_literal) (identifier) (identifier) (MISSING ";")) else_body: (procedure_call_statement procedure: (identifier) (string_literal) (identifier) (identifier))))) (onbeforetestrun_trigger (Boolean) body: (code_block (procedure_call_statement procedure: (identifier) (string_literal) (identifier) (identifier)) (exit_statement (identifier))))))
