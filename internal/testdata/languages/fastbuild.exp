(source_file (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (comment) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (comment) (comment) (if condition: (identifier)) (call name: (identifier) body: (array (import variable: (identifier)) (compound left: (usage variable: (identifier)) (assign right: (array (string double_quoted: (double_quoted) interpolation: (interpolation variable: (identifier))) (string double_quoted: (double_quoted))))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))))) (endif (comment)) (if condition: (identifier)) (call name: (identifier) body: (array (compound left: (usage variable: (identifier)) (assign right: (string double_quoted: (double_quoted)))))) (endif (comment)) (comment) (comment) (call name: (identifier) arguments: (arguments (string single_quoted: (single_quoted))) body: (array (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (array (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))))))) (call name: (identifier) arguments: (arguments (string single_quoted: (single_quoted))) body: (array (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (array (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))))))) (call name: (identifier) arguments: (arguments (string single_quoted: (single_quoted))) body: (array (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (array (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)) (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))))))) (call name: (identifier) arguments: (arguments (string single_quoted: (single_quoted))) body: (array (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier))))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))))) (call name: (identifier) arguments: (arguments (string single_quoted: (single_quoted))) body: (array (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))))) (call name: (identifier) arguments: (arguments (string single_quoted: (single_quoted))) body: (array (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (boolean))) (comment) (comment) (comment) (compound left: (usage variable: (identifier)) (assign right: (struct (compound left: (usage variable: (identifier)) (assign right: (string)) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (comment) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (usage variable: (identifier))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (comment) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (usage variable: (identifier))) (concatenate right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier))) (concatenate right: (string single_quoted: (single_quoted))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (boolean))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier))) (concatenate right: (string single_quoted: (single_quoted))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (boolean)))))) (compound left: (usage variable: (identifier)) (assign right: (struct (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)))))))) (comment) (comment) (compound left: (usage variable: (identifier)) (assign right: (struct (compound left: (usage variable: (identifier)) (assign right: (string))) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (comment) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (usage variable: (identifier))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (comment) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (usage variable: (identifier))) (concatenate right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier))) (concatenate right: (string single_quoted: (single_quoted))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (boolean))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier))) (concatenate right: (string single_quoted: (single_quoted))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (boolean)))))) (comment) (comment) (compound left: (usage variable: (identifier)) (assign right: (struct (compound left: (usage variable: (identifier)) (assign right: (string))) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (comment) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (usage variable: (identifier))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (comment) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (usage variable: (identifier))) (concatenate right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier))) (concatenate right: (string single_quoted: (single_quoted))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (boolean))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier))) (concatenate right: (string single_quoted: (single_quoted))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (boolean)))))) (comment) (comment) (compound left: (usage variable: (identifier)) (assign right: (struct (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier))))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (comment) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string))) (compound left: (usage variable: (identifier)) (assign right: (string))) (compound left: (usage variable: (identifier)) (assign right: (string))) (compound left: (usage variable: (identifier)) (assign right: (string)))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier))) (concatenate right: (string single_quoted: (single_quoted))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (boolean))) (compound left: (usage variable: (identifier)) (assign right: (string interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier))) (concatenate right: (string single_quoted: (single_quoted))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (boolean)))))) (comment) (comment) (compound left: (usage variable: (identifier)) (assign right: (struct (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (comment) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (usage variable: (identifier)))) (comment) (comment) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string))) (compound left: (usage variable: (identifier)) (assign right: (string))) (compound left: (usage variable: (identifier)) (assign right: (string))) (compound left: (usage variable: (identifier)) (assign right: (string)))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted))))))) (comment) (comment) (compound left: (usage variable: (identifier)) (assign right: (struct (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (string single_quoted: (single_quoted))) (comment) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted))) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (usage variable: (identifier))) (comment) (comment) (concatenate right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted) placeholder: (placeholder argument: (decimal)) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string))) (compound left: (usage variable: (identifier)) (assign right: (string))) (compound left: (usage variable: (identifier)) (assign right: (string))) (compound left: (usage variable: (identifier)) (assign right: (string)))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted))) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (concatenate right: (usage variable: (identifier))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (concatenate right: (string single_quoted: (single_quoted))))))) (comment) (comment) (compound left: (usage variable: (identifier)) (assign right: (array (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier))))) (compound left: (usage variable: (identifier)) (assign right: (array (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier))))) (compound left: (usage variable: (identifier)) (assign right: (array (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier))))) (compound left: (usage variable: (identifier)) (assign right: (array (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier))))) (compound left: (usage variable: (identifier)) (assign right: (array (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier))))) (compound left: (usage variable: (identifier)) (assign right: (array (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier))))) (compound left: (usage variable: (identifier)) (assign right: (array (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier))))) (compound left: (usage variable: (identifier)) (assign right: (array (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier))))) (comment) (if condition: (identifier)) (compound left: (usage variable: (identifier)) (assign right: (struct (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted) escape_sequence: (escape_sequence) single_quoted: (single_quoted) escape_sequence: (escape_sequence) single_quoted: (single_quoted) escape_sequence: (escape_sequence) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted) escape_sequence: (escape_sequence) single_quoted: (single_quoted) escape_sequence: (escape_sequence) single_quoted: (single_quoted) escape_sequence: (escape_sequence) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string escape_sequence: (escape_sequence) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string escape_sequence: (escape_sequence) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (comment) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string)) (concatenate right: (string escape_sequence: (escape_sequence) single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted))) (concatenate right: (string escape_sequence: (escape_sequence) single_quoted: (single_quoted))) (concatenate right: (string escape_sequence: (escape_sequence) single_quoted: (single_quoted))) (concatenate right: (string escape_sequence: (escape_sequence) single_quoted: (single_quoted))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (usage variable: (identifier))) (concatenate right: (usage variable: (identifier))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (usage variable: (identifier))) (concatenate right: (usage variable: (identifier))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (usage variable: (identifier))) (concatenate right: (usage variable: (identifier))))))) (compound left: (usage variable: (identifier)) (assign right: (array (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier))))) (call name: (identifier) arguments: (arguments (string single_quoted: (single_quoted))) body: (array (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (array (string single_quoted: (single_quoted))))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))))) (call name: (identifier) arguments: (arguments (string single_quoted: (single_quoted))) body: (array (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (array (string single_quoted: (single_quoted))))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (struct (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted) escape_sequence: (escape_sequence) single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted) escape_sequence: (escape_sequence) single_quoted: (single_quoted))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (call name: (identifier) arguments: (arguments (usage variable: (identifier))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (call name: (identifier) arguments: (arguments (usage variable: (identifier))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (call name: (identifier) arguments: (arguments (usage variable: (identifier))))))) (compound left: (usage variable: (identifier)) (assign right: (array (usage variable: (identifier)) (usage variable: (identifier)) (usage variable: (identifier))))))) (endif) (comment) (include filename: (string double_quoted: (double_quoted))) (include filename: (string double_quoted: (double_quoted))) (comment) (comment) (call name: (identifier) arguments: (arguments (in left: (usage variable: (identifier)) right: (usage variable: (identifier)))) body: (array (call name: (identifier) arguments: (arguments (usage variable: (identifier)))) (call name: (identifier) arguments: (arguments (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)))) body: (array (compound left: (usage variable: (identifier)) (assign right: (array (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier))) (string single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)) single_quoted: (single_quoted) interpolation: (interpolation variable: (identifier)))))))))) (call name: (identifier) arguments: (arguments (string single_quoted: (single_quoted))) body: (array (compound left: (usage variable: (identifier)) (assign right: (array (string single_quoted: (single_quoted)) (comment) (string single_quoted: (single_quoted)) (string single_quoted: (single_quoted)) (comment) (string single_quoted: (single_quoted)) (string single_quoted: (single_quoted)) (comment) (string single_quoted: (single_quoted)) (string single_quoted: (single_quoted)) (comment) (string single_quoted: (single_quoted))))))) (call name: (identifier) arguments: (arguments (string single_quoted: (single_quoted))) body: (array (compound left: (usage variable: (identifier)) (assign right: (array (string single_quoted: (single_quoted)) (comment) (string single_quoted: (single_quoted)) (string single_quoted: (single_quoted)) (comment) (string single_quoted: (single_quoted))))))) (if condition: (identifier)) (call name: (identifier) arguments: (arguments (string single_quoted: (single_quoted))) body: (array (compound left: (usage variable: (identifier)) (assign right: (array (string single_quoted: (single_quoted))))))) (endif) (if condition: (identifier)) (call name: (identifier) arguments: (arguments (string single_quoted: (single_quoted))) body: (array (compound left: (usage variable: (identifier)) (assign right: (array (string single_quoted: (single_quoted))))))) (endif) (comment) (if condition: (identifier)) (call name: (identifier) arguments: (arguments (string single_quoted: (single_quoted))) body: (array (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (array (string single_quoted: (single_quoted)) (string single_quoted: (single_quoted))))) (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (usage variable: (identifier)))) (compound left: (usage variable: (identifier)) (assign right: (struct (compound left: (usage variable: (identifier)) (assign right: (array (string single_quoted: (single_quoted)) (string single_quoted: (single_quoted))))) (compound left: (usage variable: (identifier)) (assign right: (array (string single_quoted: (single_quoted)))))))) (compound left: (usage variable: (identifier)) (assign right: (array (usage variable: (identifier))))) (compound left: (usage variable: (identifier)) (assign right: (struct (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (array (string single_quoted: (single_quoted)))))))) (compound left: (usage variable: (identifier)) (assign right: (struct (compound left: (usage variable: (identifier)) (assign right: (string single_quoted: (single_quoted)))) (compound left: (usage variable: (identifier)) (assign right: (array (string single_quoted: (single_quoted)))))))) (compound left: (usage variable: (identifier)) (assign right: (array (usage variable: (identifier)) (usage variable: (identifier))))))) (endif))