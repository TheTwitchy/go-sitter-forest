(source_code (comment) (using_statement (qualified_name (identifier) (identifier))) (class_statement name: (qualified_name (identifier) (identifier)) (class_tuning (use_widget_pool)) (class_tuning (final)) (body (variable_definition (access_tuning) (scope_tuning) name: (identifier) (type_tuning type: (primitive_type)) (variable_tuning (number_literal)) (variable_tuning (array_literal (string_literal) (string_literal) (string_literal) (string_literal) (string_literal) (string_literal) (string_literal) (string_literal) (string_literal) (string_literal) (string_literal) (string_literal)))) (comment) (comment) (method_definition (access_tuning) (scope_tuning) (return_type (primitive_type)) name: (identifier) (parameters (function_parameter (function_parameter_mode) name: (identifier) (type_tuning type: (primitive_type)))) (body (return_statement (additive_expression (additive_expression (additive_expression (additive_expression (additive_expression (additive_expression (additive_expression (additive_expression (function_call function: (identifier) (arguments (argument (function_call function: (identifier) (arguments (argument (identifier))))))) (string_literal)) (array_access array: (identifier) (function_call function: (identifier) (arguments (argument (identifier)))))) (string_literal)) (function_call function: (identifier) (arguments (argument (function_call function: (identifier) (arguments (argument (identifier)))))))) (string_literal)) (function_call function: (identifier) (arguments (argument (function_call function: (identifier) (arguments (argument (function_call function: (identifier) (arguments (argument (multiplicative_expression (function_call function: (identifier) (arguments (argument (identifier)))) (number_literal))) (argument (number_literal)))))))) (argument (string_literal))))) (string_literal)) (function_call function: (identifier) (arguments (argument (function_call function: (identifier) (arguments (argument (identifier))))))))))) (method_definition (access_tuning) (scope_tuning) (return_type (primitive_type)) name: (identifier) (parameters (function_parameter (function_parameter_mode) name: (identifier) (type_tuning type: (primitive_type)))) (body (return_statement (function_call function: (identifier) (arguments (argument (function_call function: (identifier) (arguments (argument (identifier))))))))) (comment)) (comment) (method_definition (access_tuning) (scope_tuning) (return_type (primitive_type)) name: (identifier) (parameters (function_parameter (function_parameter_mode) name: (identifier) (type_tuning type: (primitive_type)))) (body (return_statement (additive_expression (function_call function: (identifier) (arguments (argument (function_call function: (identifier) (arguments (argument (multiplicative_expression (identifier) (number_literal))) (argument (number_literal))))) (argument (string_literal)))) (function_call function: (identifier) (arguments (argument (multiplicative_expression (function_call function: (identifier) (arguments (argument (identifier)))) (number_literal))) (argument (string_literal)))))))) (comment) (method_definition (access_tuning) (scope_tuning) (return_type (primitive_type)) name: (identifier) (parameters (function_parameter (function_parameter_mode) name: (identifier) (type_tuning type: (primitive_type)))) (body (variable_definition name: (identifier) (type_tuning type: (primitive_type)) (variable_tuning)) (variable_definition name: (identifier) (type_tuning type: (primitive_type)) (variable_tuning)) (variable_definition name: (identifier) (type_tuning type: (primitive_type)) (variable_tuning)) (variable_definition name: (identifier) (type_tuning type: (primitive_type)) (variable_tuning)) (comment) (abl_statement statement: (identifier) (identifier) (identifier) (identifier) (identifier) (identifier)) (variable_assignment (assignment name: (identifier) (function_call function: (identifier) (arguments (argument (identifier)))))) (variable_assignment (assignment name: (identifier) (ERROR (arguments (argument (identifier)))) (number_literal))) (comment) (comment) (do_block (to_phrase (assignment name: (identifier) (number_literal)) (function_call function: (identifier) (arguments (argument (identifier)))) (number_literal)) (body (assign_statement (assignment name: (identifier) (additive_expression (additive_expression (additive_expression (identifier) (function_call function: (identifier) (arguments (argument (identifier)) (argument (identifier)) (argument (number_literal))))) (function_call function: (identifier) (arguments (argument (number_literal))))) (function_call function: (identifier) (arguments (argument (number_literal))))))))) (return_statement (identifier)))))))
