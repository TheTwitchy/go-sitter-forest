(source_code (comment) (using_statement (qualified_name (identifier) (identifier))) (class_statement name: (qualified_name (identifier) (identifier)) (use_widget_pool) (final) (class_body (variable_definition (access_tuning) (scope_tuning) name: (identifier) type: (primitive_type) (variable_tuning (number_literal)) (variable_tuning (array_literal (double_quoted_string) (double_quoted_string) (double_quoted_string) (double_quoted_string) (double_quoted_string) (double_quoted_string) (double_quoted_string) (double_quoted_string) (double_quoted_string) (double_quoted_string) (double_quoted_string) (double_quoted_string)))) (comment) (comment) (method_definition (access_tuning) (scope_tuning) return_type: (primitive_type) (identifier) (function_parameter (function_parameter_mode) (identifier) (primitive_type)) (body (return_statement (additive_expression (additive_expression (additive_expression (additive_expression (additive_expression (additive_expression (additive_expression (additive_expression (function_call function: (identifier) (function_call_argument (function_call function: (identifier) (function_call_argument (identifier))))) (double_quoted_string)) (ERROR (identifier)) (array_literal (function_call function: (identifier) (function_call_argument (identifier))))) (double_quoted_string)) (function_call function: (identifier) (function_call_argument (function_call function: (identifier) (function_call_argument (identifier)))))) (double_quoted_string)) (function_call function: (identifier) (function_call_argument (function_call function: (identifier) (function_call_argument (function_call function: (identifier) (function_call_argument (multiplicative_expression (function_call function: (identifier) (function_call_argument (identifier))) (number_literal))) (function_call_argument (number_literal)))))) (function_call_argument (double_quoted_string)))) (double_quoted_string)) (function_call function: (identifier) (function_call_argument (function_call function: (identifier) (function_call_argument (identifier))))))))) (method_definition (access_tuning) (scope_tuning) return_type: (primitive_type) (identifier) (function_parameter (function_parameter_mode) (identifier) (primitive_type)) (body (return_statement (function_call function: (identifier) (function_call_argument (function_call function: (identifier) (function_call_argument (identifier))))))) (comment)) (comment) (method_definition (access_tuning) (scope_tuning) return_type: (primitive_type) (identifier) (function_parameter (function_parameter_mode) (identifier) (primitive_type)) (body (return_statement (additive_expression (function_call function: (identifier) (function_call_argument (function_call function: (identifier) (function_call_argument (multiplicative_expression (identifier) (number_literal))) (function_call_argument (number_literal)))) (function_call_argument (double_quoted_string))) (function_call function: (identifier) (function_call_argument (function_call function: (identifier) (function_call_argument (identifier)))) (ERROR (identifier)) (function_call_argument (double_quoted_string))))))) (comment) (method_definition (access_tuning) (scope_tuning) return_type: (primitive_type) (identifier) (function_parameter (function_parameter_mode) (identifier) (primitive_type)) (body (variable_definition name: (identifier) type: (primitive_type) (variable_tuning)) (variable_definition name: (identifier) type: (primitive_type) (variable_tuning)) (variable_definition name: (identifier) type: (primitive_type) (variable_tuning)) (variable_definition name: (identifier) type: (primitive_type) (variable_tuning)) (comment) (abl_statement statement: (identifier) (identifier) (identifier) (identifier) (identifier) (identifier)) (variable_assignment (assignment name: (identifier) (function_call function: (identifier) (function_call_argument (identifier))))) (variable_assignment (assignment name: (identifier) (ERROR (function_call_argument (identifier))) (number_literal))) (comment) (comment) (do_block (to_phrase (assignment name: (identifier) (number_literal)) (function_call function: (identifier) (function_call_argument (identifier))) (number_literal)) (body (assign_statement (assignment name: (identifier) (additive_expression (additive_expression (additive_expression (identifier) (function_call function: (identifier) (function_call_argument (identifier)) (function_call_argument (identifier)) (function_call_argument (number_literal)))) (function_call function: (identifier) (function_call_argument (number_literal)))) (function_call function: (identifier) (function_call_argument (number_literal)))))))) (return_statement (identifier)))))))
