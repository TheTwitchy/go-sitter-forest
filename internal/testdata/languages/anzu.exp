(source_file (comment) (statement (var_statement name: (identifier) value: (expression (number_literal)))) (statement (var_statement name: (identifier) value: (expression (number_literal)))) (statement (while_statement (expression (binary_expression left: (expression (identifier)) right: (expression (number_literal)))) (compound_statement (statement (if_statement condition: (expression (binary_expression left: (expression (binary_expression left: (expression (identifier)) right: (expression (number_literal)))) right: (expression (number_literal)))) true_block: (compound_statement (statement (expression_statement (expression (assignment_expression left: (identifier) right: (expression (binary_expression left: (expression (identifier)) right: (expression (identifier))))))))) else_condition: (expression (binary_expression left: (expression (binary_expression left: (expression (identifier)) right: (expression (number_literal)))) right: (expression (number_literal)))) else_block: (compound_statement (statement (expression_statement (expression (assignment_expression left: (identifier) right: (expression (binary_expression left: (expression (identifier)) right: (expression (identifier))))))))))) (statement (expression_statement (expression (assignment_expression left: (identifier) right: (expression (binary_expression left: (expression (identifier)) right: (expression (number_literal))))))))))) (statement (expression_statement (expression (call_expression function_expression: (expression (identifier)) parameters: (expression (string_literal)) parameters: (expression (identifier)))))))
