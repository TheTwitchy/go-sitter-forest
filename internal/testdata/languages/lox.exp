(program (print_statement (number)) (comment) (block_statement (variable_declaration name: (identifier) initialiser: (number))) (if_statement condition: (binary_expression left: (number) right: (number)) then: (block_statement (print_statement (number))) else: (block_statement (print_statement (number)))) (comment) (while_statement condition: (binary_expression left: (number) right: (number)) body: (block_statement (print_statement (number)))) (for_statement initialiser: (variable_declaration name: (identifier) initialiser: (number)) condition: (binary_expression left: (identifier) right: (number)) update: (assignment_expression left: (identifier) right: (binary_expression left: (identifier) right: (number))) body: (block_statement (print_statement (number)))) (break_statement) (continue_statement) (return_statement (number)) (comment) (function_declaration name: (identifier) parameters: (parameters (identifier) (identifier)) body: (block_statement (return_statement (binary_expression left: (identifier) right: (identifier))))))