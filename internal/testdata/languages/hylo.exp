(source_file (function_decl head: (function_head (function_name name: (identifier))) signature: (function_signature returns: (name_type_expr qualifier: (selector identifier: (identifier_expr entity: (identifier))))) body: (brace_stmt (stmt (function_call_expr head: (selector_expr (selector identifier: (identifier_expr entity: (identifier)))) arguments: (call_argument (string_literal (simple_string))))) (stmt (jump_stmt return: (integer_literal (decimal_literal)))))) (function_decl head: (function_head (function_name name: (identifier))) signature: (function_signature returns: (name_type_expr qualifier: (selector identifier: (identifier_expr entity: (identifier))))) body: (brace_stmt (stmt (integer_literal (decimal_literal))))) (function_decl head: (function_head (function_name name: (identifier))) signature: (function_signature returns: (name_type_expr qualifier: (selector identifier: (identifier_expr entity: (identifier))))) body: (brace_stmt (stmt (binding_decl pattern: (binding_pattern introducer: (binding_introducer) pattern: (identifier)) initializer: (function_call_expr head: (selector_expr (selector identifier: (identifier_expr entity: (identifier)))) arguments: (call_argument (lambda_expr signature: (function_signature) body: (brace_stmt (stmt (function_call_expr head: (selector_expr (selector identifier: (identifier_expr entity: (identifier)))))))))))) (stmt (binding_decl pattern: (binding_pattern introducer: (binding_introducer) pattern: (identifier)) initializer: (function_call_expr head: (selector_expr (selector identifier: (identifier_expr entity: (identifier))))))) (stmt (function_call_expr head: (selector_expr (selector identifier: (identifier_expr entity: (identifier)))) arguments: (call_argument (string_literal (simple_string))))) (stmt (function_call_expr head: (selector_expr (selector identifier: (identifier_expr entity: (identifier)))) arguments: (call_argument (string_literal (simple_string))))) (stmt (binding_decl pattern: (binding_pattern introducer: (binding_introducer) pattern: (identifier)) initializer: (function_call_expr head: (value_member_expr qualifier: (selector_expr (selector identifier: (identifier_expr entity: (identifier)))) selector: (selector identifier: (identifier_expr entity: (identifier))))))) (single_line_comment) (stmt (function_call_expr head: (selector_expr (selector identifier: (identifier_expr entity: (identifier)))) arguments: (call_argument (string_literal (simple_string))))) (stmt (jump_stmt return: (infix_expr lhs: (selector_expr (selector identifier: (identifier_expr entity: (identifier)))) tail: (infix_operator_tail operator: (infix_operator) rhs: (selector_expr (selector identifier: (identifier_expr entity: (identifier)))))))))) (function_decl head: (function_head (access_modifier) (function_name name: (identifier))) signature: (function_signature) body: (brace_stmt (stmt (function_call_expr head: (selector_expr (selector identifier: (identifier_expr entity: (identifier)))) arguments: (call_argument (string_literal (simple_string))))) (stmt (function_call_expr head: (selector_expr (selector identifier: (identifier_expr entity: (identifier)))) arguments: (call_argument (function_call_expr head: (selector_expr (selector identifier: (identifier_expr entity: (identifier)))))))) (stmt (function_call_expr head: (selector_expr (selector identifier: (identifier_expr entity: (identifier)))) arguments: (call_argument (string_literal (simple_string))))))) (single_line_comment) (single_line_comment))