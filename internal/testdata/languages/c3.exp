(source_file (const_declaration type: (type (base_type (base_type_name))) name: (const_ident) right: (integer_literal)) (const_declaration type: (type (base_type (base_type_name))) name: (const_ident) right: (integer_literal)) (const_declaration type: (type (base_type (base_type_name))) name: (const_ident) right: (binary_expr left: (const_ident) right: (integer_literal))) (const_declaration type: (type (base_type (base_type_name))) name: (const_ident) right: (binary_expr left: (type_access_expr argument: (type (base_type (type_ident))) field: (access_ident (ident))) right: (type_access_expr argument: (type (base_type (type_ident))) field: (access_ident (ident))))) (const_declaration type: (type (base_type (base_type_name))) name: (const_ident) right: (integer_literal)) (const_declaration type: (type (base_type (base_type_name))) name: (const_ident) right: (integer_literal)) (const_declaration type: (type (base_type (base_type_name))) name: (const_ident) right: (integer_literal)) (const_declaration type: (type (base_type (base_type_name))) name: (const_ident) right: (integer_literal)) (const_declaration type: (type (base_type (base_type_name))) name: (const_ident) right: (integer_literal)) (const_declaration type: (type (base_type (base_type_name))) name: (const_ident) right: (integer_literal)) (struct_declaration name: (type_ident) body: (struct_body (struct_member_declaration type: (type (base_type (base_type_name))) (identifier_list (ident))) (struct_member_declaration type: (type (base_type (base_type_name))) (identifier_list (ident))) (struct_member_declaration type: (type (base_type (type_ident)) (type_suffix)) (identifier_list (ident))) (struct_member_declaration type: (type (base_type (type_ident)) (type_suffix)) (identifier_list (ident))))) (struct_declaration name: (type_ident) body: (struct_body (struct_member_declaration type: (type (base_type (type_ident)) (type_suffix)) (identifier_list (ident))))) (struct_declaration name: (type_ident) body: (struct_body (struct_member_declaration type: (type (base_type (type_ident)) (type_suffix)) (identifier_list (ident))))) (struct_declaration name: (type_ident) body: (struct_body (struct_member_declaration type: (type (base_type (base_type_name))) (identifier_list (ident))) (struct_member_declaration type: (type (base_type (base_type_name))) (identifier_list (ident))) (struct_member_declaration type: (type (base_type (type_ident)) (type_suffix) (type_suffix (const_ident))) (identifier_list (ident))))) (block_comment (block_comment_text)) (func_definition (func_header return_type: (type (base_type (base_type_name))) method_type: (type (base_type (type_ident))) name: (ident)) (fn_parameter_list (parameter name: (ident)) (parameter type: (type (base_type (base_type_name))) name: (ident))) body: (macro_func_body (compound_stmt (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident) right: (cast_expr type: (type (base_type (type_ident)) (type_suffix)) value: (ident)))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (integer_literal))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (binary_expr left: (binary_expr left: (const_ident) right: (type_access_expr argument: (type (base_type (type_ident))) field: (access_ident (ident)))) right: (type_access_expr argument: (type (base_type (type_ident))) field: (access_ident (ident)))))) (expr_stmt (call_expr function: (field_expr argument: (ident) field: (access_ident (ident))) arguments: (call_invocation))) (expr_stmt (call_expr function: (field_expr argument: (subscript_expr argument: (field_expr argument: (ident) field: (access_ident (ident))) index: (call_expr function: (ident) arguments: (call_invocation (call_arg (field_expr argument: (ident) field: (access_ident (ident))))))) field: (access_ident (ident))) arguments: (call_invocation (call_arg (ident))))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (ident))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (binary_expr left: (ident) right: (const_ident))))))) (func_definition (func_header return_type: (type (base_type (base_type_name)) (type_suffix)) method_type: (type (base_type (type_ident))) name: (ident)) (fn_parameter_list (parameter name: (ident)) (parameter type: (type (base_type (base_type_name))) name: (ident))) body: (macro_func_body (compound_stmt (declaration_stmt type: (type (base_type (base_type_name))) (local_decl_after_type name: (ident) right: (call_expr function: (ident) arguments: (call_invocation (call_arg (ident)))))) (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident) right: (subscript_expr argument: (field_expr argument: (ident) field: (access_ident (ident))) index: (ident)))) (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident) right: (call_expr function: (field_expr argument: (ident) field: (access_ident (ident))) arguments: (call_invocation (call_arg (ident)))))) (while_stmt condition: (paren_cond (unary_expr argument: (ident))) body: (compound_stmt (expr_stmt (assignment_expr left: (ident) right: (subscript_expr argument: (field_expr argument: (ident) field: (access_ident (ident))) index: (unary_expr argument: (ident))))) (expr_stmt (assignment_expr left: (ident) right: (call_expr function: (field_expr argument: (ident) field: (access_ident (ident))) arguments: (call_invocation (call_arg (ident)))))))) (if_stmt condition: (paren_cond (binary_expr left: (binary_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (ident)) right: (binary_expr left: (const_ident) right: (const_ident)))) body: (compound_stmt (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident) right: (binary_expr left: (cast_expr type: (type (base_type (type_ident)) (type_suffix)) value: (paren_expr (binary_expr left: (binary_expr left: (cast_expr type: (type (base_type (base_type_name)) (type_suffix)) value: (ident)) right: (type_access_expr argument: (type (base_type (type_ident))) field: (access_ident (ident)))) right: (type_access_expr argument: (type (base_type (type_ident))) field: (access_ident (ident)))))) right: (ident)))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (binary_expr left: (binary_expr left: (binary_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (ident)) right: (cast_expr type: (type (base_type (base_type_name))) value: (type_access_expr argument: (type (base_type (type_ident))) field: (access_ident (ident))))) right: (cast_expr type: (type (base_type (base_type_name))) value: (type_access_expr argument: (type (base_type (type_ident))) field: (access_ident (ident))))))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (integer_literal))) (expr_stmt (call_expr function: (field_expr argument: (ident) field: (access_ident (ident))) arguments: (call_invocation))) (declaration_stmt type: (type (base_type (base_type_name))) (local_decl_after_type name: (ident) right: (call_expr function: (ident) arguments: (call_invocation (call_arg (field_expr argument: (ident) field: (access_ident (ident)))))))) (expr_stmt (call_expr function: (field_expr argument: (subscript_expr argument: (field_expr argument: (ident) field: (access_ident (ident))) index: (ident)) field: (access_ident (ident))) arguments: (call_invocation (call_arg (ident))))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (ident))) (expr_stmt (call_expr function: (field_expr argument: (ident) field: (access_ident (ident))) arguments: (call_invocation))))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (integer_literal))) (expr_stmt (call_expr function: (field_expr argument: (subscript_expr argument: (field_expr argument: (ident) field: (access_ident (ident))) index: (ident)) field: (access_ident (ident))) arguments: (call_invocation (call_arg (ident))))) (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident) right: (call_expr function: (field_expr argument: (ident) field: (access_ident (ident))) arguments: (call_invocation)))) (if_stmt condition: (paren_cond (binary_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (const_ident))) body: (compound_stmt (if_stmt condition: (paren_cond (unary_expr argument: (call_expr function: (field_expr argument: (ident) field: (access_ident (ident))) arguments: (call_invocation (call_arg (integer_literal)))))) body: (return_stmt))) (else_part (if_stmt condition: (paren_cond (binary_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (const_ident))) body: (compound_stmt (expr_stmt (call_expr function: (field_expr argument: (ident) field: (access_ident (ident))) arguments: (call_invocation (call_arg (integer_literal))))))))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))))) (return_stmt (unary_expr argument: (field_expr argument: (ident) field: (access_ident (ident)))))))) (block_comment (block_comment_text)) (func_definition (func_header return_type: (type (base_type (base_type_name))) method_type: (type (base_type (type_ident))) name: (ident)) (fn_parameter_list (parameter name: (ident)) (parameter type: (type (base_type (base_type_name)) (type_suffix)) name: (ident))) body: (macro_func_body (compound_stmt (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident) right: (binary_expr left: (cast_expr type: (type (base_type (base_type_name)) (type_suffix)) value: (ident)) right: (const_ident)))) (if_stmt condition: (paren_cond (binary_expr left: (ident) right: (cast_expr type: (type (base_type (type_ident)) (type_suffix)) value: (field_expr argument: (ident) field: (access_ident (ident)))))) body: (compound_stmt (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (integer_literal))) (expr_stmt (call_expr function: (field_expr argument: (subscript_expr argument: (field_expr argument: (ident) field: (access_ident (ident))) index: (call_expr function: (ident) arguments: (call_invocation (call_arg (field_expr argument: (ident) field: (access_ident (ident))))))) field: (access_ident (ident))) arguments: (call_invocation (call_arg (ident))))) (return_stmt))) (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident) right: (binary_expr left: (cast_expr type: (type (base_type (base_type_name)) (type_suffix)) value: (call_expr function: (field_expr argument: (ident) field: (access_ident (ident))) arguments: (call_invocation))) right: (type_access_expr argument: (type (base_type (type_ident))) field: (access_ident (ident)))))) (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident) right: (binary_expr left: (cast_expr type: (type (base_type (base_type_name)) (type_suffix)) value: (ident)) right: (type_access_expr argument: (type (base_type (type_ident))) field: (access_ident (ident)))))) (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident) right: (field_expr argument: (ident) field: (access_ident (ident))))) (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident))) (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident))) (if_stmt condition: (paren_cond (field_expr argument: (ident) field: (access_ident (ident)))) body: (compound_stmt (expr_stmt (assignment_expr left: (ident) right: (subscript_expr argument: (field_expr argument: (ident) field: (access_ident (ident))) index: (call_expr function: (ident) arguments: (call_invocation (call_arg (field_expr argument: (ident) field: (access_ident (ident))))))))) (expr_stmt (call_expr function: (field_expr argument: (ident) field: (access_ident (ident))) arguments: (call_invocation (call_arg (ident))))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (binary_expr left: (const_ident) right: (field_expr argument: (ident) field: (access_ident (ident)))))) (expr_stmt (assignment_expr left: (ident) right: (call_expr function: (field_expr argument: (ident) field: (access_ident (ident))) arguments: (call_invocation)))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (ident))) (expr_stmt (assignment_expr left: (ident) right: (ident))))) (if_stmt condition: (paren_cond (field_expr argument: (ident) field: (access_ident (ident)))) body: (compound_stmt (expr_stmt (assignment_expr left: (ident) right: (subscript_expr argument: (field_expr argument: (ident) field: (access_ident (ident))) index: (call_expr function: (ident) arguments: (call_invocation (call_arg (field_expr argument: (ident) field: (access_ident (ident))))))))) (expr_stmt (call_expr function: (field_expr argument: (ident) field: (access_ident (ident))) arguments: (call_invocation (call_arg (ident))))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (binary_expr left: (const_ident) right: (field_expr argument: (ident) field: (access_ident (ident)))))) (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident) right: (call_expr function: (field_expr argument: (ident) field: (access_ident (ident))) arguments: (call_invocation)))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (integer_literal))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (integer_literal))) (expr_stmt (assignment_expr left: (ident) right: (call_expr function: (field_expr argument: (ident) field: (access_ident (ident))) arguments: (call_invocation)))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (ident))))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (integer_literal))) (expr_stmt (call_expr function: (field_expr argument: (subscript_expr argument: (field_expr argument: (ident) field: (access_ident (ident))) index: (call_expr function: (ident) arguments: (call_invocation (call_arg (field_expr argument: (ident) field: (access_ident (ident))))))) field: (access_ident (ident))) arguments: (call_invocation (call_arg (ident)))))))) (func_definition (func_header return_type: (type (base_type (base_type_name))) method_type: (type (base_type (type_ident))) name: (ident)) (fn_parameter_list (parameter name: (ident)) (parameter type: (type (base_type (base_type_name))) name: (ident))) body: (macro_func_body (compound_stmt (return_stmt (integer_literal))))) (func_definition (func_header return_type: (type (base_type (base_type_name))) method_type: (type (base_type (type_ident))) name: (ident)) (fn_parameter_list (parameter name: (ident)) (parameter type: (type (base_type (base_type_name))) name: (ident))) body: (macro_func_body (compound_stmt (return_stmt)))) (func_definition (func_header return_type: (type (base_type (base_type_name))) name: (ident)) (fn_parameter_list (parameter type: (type (base_type (base_type_name))) name: (ident))) body: (macro_func_body (compound_stmt (declaration_stmt type: (type (base_type (base_type_name))) (local_decl_after_type name: (ident) right: (integer_literal))) (expr_stmt (assignment_expr left: (ident) right: (ternary_expr condition: (binary_expr left: (ident) right: (integer_literal)) consequence: (integer_literal) alternative: (ident)))) (while_stmt condition: (paren_cond (assignment_expr left: (ident) right: (integer_literal))) body: (expr_stmt (update_expr argument: (ident)))) (expr_stmt (assignment_expr left: (ident) right: (integer_literal))) (if_stmt condition: (paren_cond (binary_expr left: (ident) right: (const_ident))) body: (expr_stmt (assignment_expr left: (ident) right: (const_ident)))) (return_stmt (ident))))) (func_definition (func_header return_type: (type (base_type (base_type_name))) method_type: (type (base_type (type_ident))) name: (ident)) (fn_parameter_list (parameter name: (ident))) body: (macro_func_body (compound_stmt (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident) right: (call_expr function: (field_expr argument: (ident) field: (access_ident (ident))) arguments: (call_invocation)))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (ident)))))) (func_definition (func_header return_type: (type (base_type (type_ident)) (type_suffix)) method_type: (type (base_type (type_ident))) name: (ident)) (fn_parameter_list (parameter name: (ident))) body: (macro_func_body (compound_stmt (return_stmt (binary_expr left: (binary_expr left: (cast_expr type: (type (base_type (base_type_name)) (type_suffix)) value: (ident)) right: (type_access_expr argument: (type (base_type (type_ident))) field: (access_ident (ident)))) right: (field_expr argument: (ident) field: (access_ident (ident)))))))) (func_definition (func_header return_type: (type (base_type (type_ident)) (type_suffix)) method_type: (type (base_type (type_ident))) name: (ident)) (fn_parameter_list (parameter name: (ident))) body: (macro_func_body (compound_stmt (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident) right: (binary_expr left: (cast_expr type: (type (base_type (base_type_name)) (type_suffix)) value: (field_expr argument: (ident) field: (access_ident (ident)))) right: (type_access_expr argument: (type (base_type (type_ident))) field: (access_ident (ident)))))) (return_stmt (field_expr argument: (ident) field: (access_ident (ident))))))) (func_definition (func_header return_type: (type (base_type (base_type_name))) method_type: (type (base_type (type_ident))) name: (ident)) (fn_parameter_list (parameter name: (ident)) (parameter type: (type (base_type (type_ident)) (type_suffix)) name: (ident))) body: (macro_func_body (compound_stmt (if_stmt condition: (paren_cond (unary_expr argument: (field_expr argument: (ident) field: (access_ident (ident))))) body: (return_stmt)) (if_stmt condition: (paren_cond (binary_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (ident))) body: (compound_stmt (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (field_expr argument: (field_expr argument: (ident) field: (access_ident (ident))) field: (access_ident (ident))))) (return_stmt))) (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident) right: (field_expr argument: (field_expr argument: (ident) field: (access_ident (ident))) field: (access_ident (ident))))) (while_stmt condition: (paren_cond (ident)) body: (compound_stmt (if_stmt condition: (paren_cond (binary_expr left: (ident) right: (ident))) body: (compound_stmt (if_stmt condition: (paren_cond (unary_expr argument: (field_expr argument: (ident) field: (access_ident (ident))))) body: (compound_stmt (expr_stmt (assignment_expr left: (field_expr argument: (field_expr argument: (ident) field: (access_ident (ident))) field: (access_ident (ident)))))) (else_part body: (compound_stmt (expr_stmt (assignment_expr left: (field_expr argument: (field_expr argument: (ident) field: (access_ident (ident))) field: (access_ident (ident))) right: (field_expr argument: (ident) field: (access_ident (ident))))) (expr_stmt (assignment_expr left: (field_expr argument: (field_expr argument: (ident) field: (access_ident (ident))) field: (access_ident (ident))) right: (field_expr argument: (ident) field: (access_ident (ident)))))))) (return_stmt))) (expr_stmt (assignment_expr left: (ident) right: (field_expr argument: (ident) field: (access_ident (ident)))))))))) (func_definition (func_header return_type: (type (base_type (base_type_name))) method_type: (type (base_type (type_ident))) name: (ident)) (fn_parameter_list (parameter name: (ident)) (parameter type: (type (base_type (type_ident)) (type_suffix)) name: (ident))) body: (macro_func_body (compound_stmt (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))))) (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident) right: (field_expr argument: (ident) field: (access_ident (ident))))) (if_stmt condition: (paren_cond (unary_expr argument: (field_expr argument: (ident) field: (access_ident (ident))))) body: (compound_stmt (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (ident))) (return_stmt))) (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident) right: (field_expr argument: (ident) field: (access_ident (ident))))) (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident))) (while_stmt condition: (paren_cond (binary_expr left: (binary_expr left: (ident)) right: (binary_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (field_expr argument: (ident) field: (access_ident (ident)))))) body: (compound_stmt (expr_stmt (assignment_expr left: (ident) right: (ident))) (expr_stmt (assignment_expr left: (ident) right: (field_expr argument: (ident) field: (access_ident (ident))))))) (if_stmt condition: (paren_cond (unary_expr argument: (ident))) body: (compound_stmt (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (ident))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (ident)))) (else_part body: (compound_stmt (if_stmt condition: (paren_cond (ident)) body: (compound_stmt (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (ident))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (ident))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (ident))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (ident)))) (else_part body: (compound_stmt (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (field_expr argument: (ident) field: (access_ident (ident))))) (expr_stmt (assignment_expr left: (field_expr argument: (field_expr argument: (ident) field: (access_ident (ident))) field: (access_ident (ident))) right: (ident))) (expr_stmt (assignment_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (ident)))))))))))) (func_definition (func_header return_type: (type (base_type (type_ident)) (type_suffix)) method_type: (type (base_type (type_ident))) name: (ident)) (fn_parameter_list (parameter name: (ident)) (parameter type: (type (base_type (base_type_name))) name: (ident))) body: (macro_func_body (compound_stmt (if_stmt condition: (paren_cond (unary_expr argument: (field_expr argument: (ident) field: (access_ident (ident))))) body: (return_stmt)) (declaration_stmt type: (type (base_type (type_ident)) (type_suffix)) (local_decl_after_type name: (ident) right: (field_expr argument: (ident) field: (access_ident (ident))))) (while_stmt condition: (paren_cond (ident)) body: (compound_stmt (if_stmt condition: (paren_cond (binary_expr left: (field_expr argument: (ident) field: (access_ident (ident))) right: (ident))) body: (return_stmt (ident))) (expr_stmt (assignment_expr left: (ident) right: (field_expr argument: (ident) field: (access_ident (ident))))))) (return_stmt)))))
