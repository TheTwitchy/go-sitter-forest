(description (statement (assignment_or_declaration_statement decl: (var_or_let_or_reg) lvalue: (complex_identifier (identifier)) operator: (assignment_operator) rvalue: (lambda func_type: (fun_tok) (function_definition input: (arg_list (arg_item_list (arg_item (typed_identifier identifier: (identifier) type: (type_cast type: (expression_type (identifier))))))) output: (arg_list (arg_item_list (arg_item (typed_identifier identifier: (identifier) type: (type_cast type: (expression_type (identifier))))))) code: (scope_statement))))) (statement (assignment_or_declaration_statement decl: (var_or_let_or_reg) lvalue: (complex_identifier (identifier)) operator: (assignment_operator) rvalue: (lambda func_type: (proc_tok) (function_definition input: (arg_list (arg_item_list (arg_item (typed_identifier identifier: (identifier) type: (type_cast type: (expression_type (identifier))))))) output: (arg_list (arg_item_list (arg_item (typed_identifier identifier: (identifier))))) code: (scope_statement))))) (statement (assignment_or_declaration_statement decl: (var_or_let_or_reg) lvalue: (complex_identifier (identifier)) type: (type_cast type: (function_type func_type: (fun_tok) input: (arg_list (arg_item_list (arg_item (typed_identifier identifier: (identifier) type: (type_cast type: (expression_type (identifier))))))) output: (arg_list (arg_item_list (arg_item (typed_identifier identifier: (identifier) type: (type_cast type: (array_type length: (tuple_sq (tuple_list item: (constant))) base: (expression_type (identifier)))))))))) operator: (assignment_operator) rvalue: (complex_identifier (identifier)) (comment))) (statement (assignment_or_declaration_statement decl: (var_or_let_or_reg) lvalue: (complex_identifier (identifier)) operator: (assignment_operator) rvalue: (lambda func_type: (fun_tok) (function_definition input: (arg_list (arg_item_list (arg_item (typed_identifier identifier: (identifier))) (arg_item (typed_identifier identifier: (identifier) type: (type_cast type: (function_type func_type: (fun_tok) input: (arg_list (arg_item_list (arg_item (typed_identifier identifier: (identifier))) (arg_item (typed_identifier identifier: (identifier))))) output: (arg_list (arg_item_list (arg_item (typed_identifier identifier: (identifier) type: (type_cast type: (expression_type (identifier))))))))))))) output: (type_or_identifier (typed_identifier identifier: (identifier))) code: (scope_statement (statement (assignment_or_declaration_statement lvalue: (complex_identifier (identifier)) operator: (assignment_operator) rvalue: (complex_identifier (selection (member_selection argument: (complex_identifier (identifier)) select: (member_select (select (select_options list: (expression_list item: (constant)))))))))) (statement (for_statement (typed_identifier identifier: (identifier)) data: (expression_list item: (complex_identifier (selection (member_selection argument: (complex_identifier (identifier)) select: (member_select (select (select_options open_range: (constant)))))))) code: (scope_statement (statement (assignment_or_declaration_statement lvalue: (complex_identifier (identifier)) operator: (assignment_operator) rvalue: (function_call function: (complex_identifier (identifier)) argument: (tuple (tuple_list item: (complex_identifier (identifier)) item: (complex_identifier (identifier)))))))))) (statement (function_call_statement (simple_function_call function: (complex_identifier (identifier)) argument: (expression_list item: (complex_identifier (identifier))))))))))) (statement (assignment_or_declaration_statement decl: (var_or_let_or_reg) lvalue: (complex_identifier (identifier)) operator: (assignment_operator) rvalue: (lambda func_type: (fun_tok) (function_definition input: (arg_list (arg_item_list (arg_item (typed_identifier identifier: (identifier) type: (type_cast type: (primitive_type (string_type))))) (arg_item (typed_identifier identifier: (identifier) type: (type_cast type: (primitive_type (string_type))))))) code: (scope_statement (statement (function_call_statement (simple_function_call function: (complex_identifier (identifier)) argument: (expression_list item: (binary_expression left: (complex_identifier (identifier)) right: (complex_identifier (identifier)))))))))))) (statement (assignment_or_declaration_statement lvalue: (complex_identifier (identifier)) operator: (assignment_operator) rvalue: (lambda func_type: (fun_tok) (function_definition input: (arg_list (arg_item_list (arg_item (typed_identifier identifier: (identifier) type: (type_cast type: (primitive_type (unsized_integer_type))))) (arg_item (typed_identifier identifier: (identifier) type: (type_cast type: (primitive_type (unsized_integer_type))))))) code: (scope_statement (statement (function_call_statement (simple_function_call function: (complex_identifier (identifier)) argument: (expression_list item: (binary_expression left: (complex_identifier (identifier)) right: (complex_identifier (identifier)))))))))))) (statement (function_call_statement (simple_function_call function: (complex_identifier (identifier)) argument: (expression_list item: (binary_expression left: (function_call function: (complex_identifier (identifier)) argument: (tuple (tuple_list item: (constant) item: (constant) item: (constant) item: (simple_assignment lvalue: (identifier) operator: (assignment_operator) rvalue: (complex_identifier (identifier)))))) right: (constant)))))) (statement (function_call_statement (simple_function_call function: (complex_identifier (identifier)) argument: (expression_list item: (binary_expression left: (complex_identifier (dot_expression item: (function_call function: (complex_identifier (identifier)) argument: (tuple (tuple_list item: (constant (complex_string_literal)) item: (constant (complex_string_literal)) item: (constant (complex_string_literal)) item: (simple_assignment lvalue: (identifier) operator: (assignment_operator) rvalue: (complex_identifier (identifier)))))) (identifier))) right: (constant (complex_string_literal))))))) (statement (assignment_or_declaration_statement decl: (var_or_let_or_reg) lvalue: (complex_identifier (identifier)) operator: (assignment_operator) rvalue: (function_call function: (complex_identifier (identifier)) argument: (tuple (tuple_list item: (complex_identifier (identifier)) item: (complex_identifier (identifier)) item: (complex_identifier (identifier)) item: (simple_assignment lvalue: (identifier) operator: (assignment_operator) rvalue: (complex_identifier (identifier)))))) (comment))))