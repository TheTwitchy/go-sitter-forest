(source_file (use_statement (string (string_content))) (actor_definition (identifier) (members (field name: (identifier) (base_type name: (identifier))) (constructor (identifier) (parameters) (block (assignment_expression (identifier) (block (number))))) (behavior (identifier) (parameters) (block (assignment_expression (identifier) (block (binary_expression left: (identifier) right: (number)))))) (behavior (identifier) (parameters (parameter name: (identifier) (base_type name: (identifier)))) (block (call_expression callee: (member_expression (identifier) (identifier)) (arguments positional: (identifier))) (assignment_expression (identifier) (block (number))))))) (actor_definition (identifier) (members (field name: (identifier) (base_type name: (identifier))) (constructor (identifier) (parameters (parameter name: (identifier) (base_type name: (identifier)))) (block (assignment_expression (identifier) (block (identifier))) (assignment_expression (variable_declaration (identifier) (base_type name: (identifier))) (block (try_statement (block (call_expression callee: (member_expression (call_expression callee: (member_expression (identifier) (identifier)) (arguments positional: (number))) (identifier)) (arguments))) (else_block (block (number)))))) (assignment_expression (variable_declaration (identifier)) (block (identifier))) (for_statement (identifier) collection: (call_expression callee: (generic_expression (identifier) (type_args (base_type name: (identifier)))) (arguments positional: (number) positional: (identifier))) (do_block (block (call_expression callee: (member_expression (identifier) (identifier)) (arguments))))) (call_expression callee: (member_expression (identifier) (identifier)) (arguments positional: (this))))) (behavior (identifier) (parameters (parameter name: (identifier) (base_type name: (identifier)))) (block (call_expression callee: (member_expression (member_expression (identifier) (identifier)) (identifier)) (arguments positional: (call_expression callee: (member_expression (identifier) (identifier)) (arguments)))))))))