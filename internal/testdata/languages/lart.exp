(source_file (typedef name: (identifier) type: (integer_type size: (integer) signed: (boolean))) (function name: (identifier) parameters: (parameter_list (parameter name: (identifier) type: (identifier))) type: (pointer_type type: (void_type))) (function name: (identifier) parameters: (parameter_list (parameter name: (identifier) type: (pointer_type type: (void_type))))) (typedef name: (identifier) type: (struct_type fields: (field_list (field name: (identifier) type: (pointer_type type: (identifier))) (field name: (identifier) type: (pointer_type type: (identifier)))))) (typedef name: (identifier) type: (struct_type fields: (field_list (field name: (identifier) type: (pointer_type type: (identifier)))))) (function name: (identifier) parameters: (parameter_list (parameter name: (identifier) type: (pointer_type type: (identifier))) (parameter name: (identifier) type: (pointer_type type: (identifier)))) type: (pointer_type type: (identifier)) body: (block (let_statement name: (identifier) type: (pointer_type type: (identifier)) value: (cast_expression type: (pointer_type type: (identifier)) value: (call_expression callable: (identifier) arguments: (argument_list (sizeof_expression type: (identifier)))))) (binary_expression left: (binary_expression left: (identifier) operator: (binary_operator_arr) right: (identifier)) operator: (binary_operator_ass) right: (identifier)) (binary_expression left: (binary_expression left: (identifier) operator: (binary_operator_arr) right: (identifier)) operator: (binary_operator_ass) right: (identifier)) (return_statement value: (identifier)))) (function name: (identifier) parameters: (parameter_list (parameter name: (identifier) type: (pointer_type type: (identifier)))) type: (pointer_type type: (identifier)) body: (block (let_statement name: (identifier) type: (pointer_type type: (identifier)) value: (cast_expression type: (pointer_type type: (identifier)) value: (call_expression callable: (identifier) arguments: (argument_list (sizeof_expression type: (identifier)))))) (binary_expression left: (binary_expression left: (identifier) operator: (binary_operator_arr) right: (identifier)) operator: (binary_operator_ass) right: (identifier)) (return_statement value: (identifier)))) (function name: (identifier) parameters: (parameter_list (parameter name: (identifier) type: (pointer_type type: (identifier)))) body: (block (if_else condition: (binary_expression left: (identifier) operator: (binary_operator_ne) right: (nullptr)) then: (block (call_expression callable: (identifier) arguments: (argument_list (binary_expression left: (identifier) operator: (binary_operator_arr) right: (identifier)))) (call_expression callable: (identifier) arguments: (argument_list (binary_expression left: (identifier) operator: (binary_operator_arr) right: (identifier)))) (call_expression callable: (identifier) arguments: (argument_list (cast_expression type: (pointer_type type: (void_type)) value: (identifier)))))))) (function name: (identifier) parameters: (parameter_list (parameter name: (identifier) type: (pointer_type type: (identifier)))) body: (block (if_else condition: (binary_expression left: (identifier) operator: (binary_operator_ne) right: (nullptr)) then: (block (call_expression callable: (identifier) arguments: (argument_list (binary_expression left: (identifier) operator: (binary_operator_arr) right: (identifier)))) (call_expression callable: (identifier) arguments: (argument_list (cast_expression type: (pointer_type type: (void_type)) value: (identifier)))))))) (function name: (identifier) parameters: (parameter_list) body: (block (let_statement name: (identifier) type: (pointer_type type: (identifier)) value: (call_expression callable: (identifier) arguments: (argument_list (call_expression callable: (identifier) arguments: (argument_list (call_expression callable: (identifier) arguments: (argument_list (call_expression callable: (identifier) arguments: (argument_list (nullptr) (nullptr))) (call_expression callable: (identifier) arguments: (argument_list (nullptr) (nullptr))))) (call_expression callable: (identifier) arguments: (argument_list (call_expression callable: (identifier) arguments: (argument_list (nullptr) (nullptr))) (call_expression callable: (identifier) arguments: (argument_list (nullptr) (nullptr)))))))))) (call_expression callable: (identifier) arguments: (argument_list (identifier))))))
